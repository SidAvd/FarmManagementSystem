// <auto-generated />
using System;
using FarmManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmManagementSystem.Migrations
{
    [DbContext(typeof(FarmDbContext))]
    [Migration("20240906133133_Migration_3")]
    partial class Migration_3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarmManagementSystem.Models.Crop", b =>
                {
                    b.Property<int>("CropID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CropID"));

                    b.Property<int>("FieldID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HarvestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PlantingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CropID");

                    b.HasIndex("FieldID");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Field", b =>
                {
                    b.Property<int>("FieldID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldID"));

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FieldID");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Harvest", b =>
                {
                    b.Property<int>("HarvestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HarvestID"));

                    b.Property<int>("CropID")
                        .HasColumnType("int");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkerID")
                        .HasColumnType("int");

                    b.HasKey("HarvestID");

                    b.HasIndex("CropID");

                    b.HasIndex("WorkerID");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Worker", b =>
                {
                    b.Property<int>("WorkerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerID"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkerID");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.WorkerAssignment", b =>
                {
                    b.Property<int>("WorkerID")
                        .HasColumnType("int");

                    b.Property<int>("FieldID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkerID", "FieldID");

                    b.HasIndex("FieldID");

                    b.ToTable("WorkerAssignments");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Crop", b =>
                {
                    b.HasOne("FarmManagementSystem.Models.Field", "Field")
                        .WithMany("Crops")
                        .HasForeignKey("FieldID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Harvest", b =>
                {
                    b.HasOne("FarmManagementSystem.Models.Crop", "Crop")
                        .WithMany("Harvests")
                        .HasForeignKey("CropID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmManagementSystem.Models.Worker", "Worker")
                        .WithMany("Harvests")
                        .HasForeignKey("WorkerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.WorkerAssignment", b =>
                {
                    b.HasOne("FarmManagementSystem.Models.Field", "Field")
                        .WithMany("WorkerAssignments")
                        .HasForeignKey("FieldID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmManagementSystem.Models.Worker", "Worker")
                        .WithMany("WorkerAssignments")
                        .HasForeignKey("WorkerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Crop", b =>
                {
                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Field", b =>
                {
                    b.Navigation("Crops");

                    b.Navigation("WorkerAssignments");
                });

            modelBuilder.Entity("FarmManagementSystem.Models.Worker", b =>
                {
                    b.Navigation("Harvests");

                    b.Navigation("WorkerAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
